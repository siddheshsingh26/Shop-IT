{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer } from './reducers/productReducer';\nimport productDetailsReducer from \"./reducers/productDetailsReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsreducer, userUpdateProfileReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsreducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderList: orderListReducer\n});\nconst shippingAddressfromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressfromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","legacy_createStore","createStore","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsreducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderList","shippingAddressfromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","cartItemsFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["D:/Shop-IT/frontend/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore} from 'redux';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {productListReducer} from './reducers/productReducer'\nimport productDetailsReducer from \"./reducers/productDetailsReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {userLoginReducer, userRegisterReducer, userDetailsreducer, userUpdateProfileReducer} from \"./reducers/userReducer\"\nimport { orderCreateReducer,orderDetailsReducer, orderPayReducer, orderListReducer } from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart : cartReducer,\n    userLogin : userLoginReducer,\n    userRegister : userRegisterReducer,\n    userDetails : userDetailsreducer,\n    userUpdateProfile : userUpdateProfileReducer,\n    orderCreate : orderCreateReducer,\n    orderDetails : orderDetailsReducer,\n    orderPay : orderPayReducer,\n    orderList : orderListReducer,\n});\n\nconst shippingAddressfromLocalStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart : {cartItems : cartItemsFromLocalStorage, shippingAddress: shippingAddressfromLocalStorage},\n    userLogin : {userInfo: userInfoFromLocalStorage}\n}\nconst middleware = [thunk];\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,kBAAkB,IAAIC,WAAW,QAAO,OAAO;AACxD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,kBAAkB,QAAO,2BAA2B;AAC5D,OAAOC,qBAAqB,MAAM,kCAAkC;AACpE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAAQC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,QAAO,wBAAwB;AAC1H,SAASC,kBAAkB,EAACC,mBAAmB,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,yBAAyB;AAEnH,MAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC5BkB,WAAW,EAAEZ,kBAAkB;EAC/Ba,cAAc,EAAEZ,qBAAqB;EACrCa,IAAI,EAAGZ,WAAW;EAClBa,SAAS,EAAGZ,gBAAgB;EAC5Ba,YAAY,EAAGZ,mBAAmB;EAClCa,WAAW,EAAGZ,kBAAkB;EAChCa,iBAAiB,EAAGZ,wBAAwB;EAC5Ca,WAAW,EAAGZ,kBAAkB;EAChCa,YAAY,EAAGZ,mBAAmB;EAClCa,QAAQ,EAAGZ,eAAe;EAC1Ba,SAAS,EAAGZ;AAChB,CAAC,CAAC;AAEF,MAAMa,+BAA+B,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAC3EC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAE5D,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvH,MAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAExH,MAAMK,YAAY,GAAG;EACjBhB,IAAI,EAAG;IAACiB,SAAS,EAAGF,yBAAyB;IAAEG,eAAe,EAAET;EAA+B,CAAC;EAChGR,SAAS,EAAG;IAACkB,QAAQ,EAAEL;EAAwB;AACnD,CAAC;AACD,MAAMM,UAAU,GAAG,CAACpC,KAAK,CAAC;AAC1B,MAAMqC,KAAK,GAAGtC,WAAW,CACrBc,OAAO,EACPmB,YAAY,EACZ/B,mBAAmB,CAACJ,eAAe,CAAC,GAAGuC,UAAU,CAAC,CAAC,CACtD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}